{"ast":null,"code":"var _jsxFileName = \"C:\\\\Source\\\\car-rental\\\\TBZ_Modul_322\\\\src\\\\components\\\\Molecules\\\\AnimatedIntro.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimatedIntro = ({\n  onIntroComplete\n}) => {\n  _s();\n  const text = \"Car Rental\";\n  const [visible, setVisible] = useState(false);\n  const animation = useSpring({\n    opacity: visible ? 1 : 0,\n    from: {\n      opacity: 0\n    },\n    config: {\n      duration: 3000\n    },\n    // Adjust the duration for slower animation\n    onRest: () => {\n      if (text.length > 0) {\n        setTimeout(() => setVisible(true), 1000); // Delay before text appears\n      } else {\n        onIntroComplete();\n      }\n    }\n  });\n  useEffect(() => {\n    let index = 0;\n    const timer = setInterval(() => {\n      if (index < text.length) {\n        index++;\n        setVisible(true);\n      } else {\n        clearInterval(timer);\n        setTimeout(() => {\n          setVisible(false);\n          onIntroComplete();\n        }, 1000); // Delay after text animation\n      }\n    }, 150); // Adjust the speed of letter-by-letter animation for slower appearance\n    return () => clearInterval(timer);\n  }, [text, onIntroComplete]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: \"@import url('https://fonts.googleapis.com/css2?family=Lobster&display=swap');\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"Lobster, sans-serif\",\n        // Use the Didot font\n        backgroundColor: \"black\",\n        width: \"100%\",\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        position: \"absolute\",\n        fontWeight: \"bold\"\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: {\n          ...animation,\n          fontSize: \"120px\",\n          color: \"white\" // Adjust the font size to make the letters bigger\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(AnimatedIntro, \"HZPFDOYY0DD+VpAng/X0DqSBbsk=\", false, function () {\n  return [useSpring];\n});\n_c = AnimatedIntro;\nexport default AnimatedIntro;\nvar _c;\n$RefreshReg$(_c, \"AnimatedIntro\");","map":{"version":3,"names":["React","useState","useEffect","useSpring","animated","jsxDEV","_jsxDEV","Fragment","_Fragment","AnimatedIntro","onIntroComplete","_s","text","visible","setVisible","animation","opacity","from","config","duration","onRest","length","setTimeout","index","timer","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontFamily","backgroundColor","width","height","display","justifyContent","alignItems","position","fontWeight","div","fontSize","color","_c","$RefreshReg$"],"sources":["C:/Source/car-rental/TBZ_Modul_322/src/components/Molecules/AnimatedIntro.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst AnimatedIntro = ({ onIntroComplete } : any) => {\r\n  const text = \"Car Rental\";\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const animation = useSpring({\r\n    opacity: visible ? 1 : 0,\r\n    from: { opacity: 0 },\r\n    config: { duration: 3000 }, // Adjust the duration for slower animation\r\n    onRest: () => {\r\n      if (text.length > 0) {\r\n        setTimeout(() => setVisible(true), 1000); // Delay before text appears\r\n      } else {\r\n        onIntroComplete();\r\n      }\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    let index = 0;\r\n    const timer = setInterval(() => {\r\n      if (index < text.length) {\r\n        index++;\r\n        setVisible(true);\r\n      } else {\r\n        clearInterval(timer);\r\n        setTimeout(() => {\r\n          setVisible(false);\r\n          onIntroComplete();\r\n        }, 1000); // Delay after text animation\r\n      }\r\n    }, 150); // Adjust the speed of letter-by-letter animation for slower appearance\r\n    return () => clearInterval(timer);\r\n  }, [text, onIntroComplete]);\r\n\r\n  return (<>\r\n    <style>\r\n@import url('https://fonts.googleapis.com/css2?family=Lobster&display=swap');\r\n</style>\r\n\r\n    <div\r\n      style={{\r\n        fontFamily: \"Lobster, sans-serif\",// Use the Didot font\r\n        backgroundColor: \"black\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        position: \"absolute\",\r\n        fontWeight: \"bold\",\r\n      }}\r\n    >\r\n      <animated.div\r\n        style={{\r\n          ...animation,\r\n          fontSize: \"120px\",\r\n          color: \"white\" // Adjust the font size to make the letters bigger\r\n        }}\r\n      >\r\n        {text}\r\n      </animated.div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnimatedIntro;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,IAAI,GAAG,YAAY;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,SAAS,GAAGZ,SAAS,CAAC;IAC1Ba,OAAO,EAAEH,OAAO,GAAG,CAAC,GAAG,CAAC;IACxBI,IAAI,EAAE;MAAED,OAAO,EAAE;IAAE,CAAC;IACpBE,MAAM,EAAE;MAAEC,QAAQ,EAAE;IAAK,CAAC;IAAE;IAC5BC,MAAM,EAAEA,CAAA,KAAM;MACZ,IAAIR,IAAI,CAACS,MAAM,GAAG,CAAC,EAAE;QACnBC,UAAU,CAAC,MAAMR,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MAC5C,CAAC,MAAM;QACLJ,eAAe,CAAC,CAAC;MACnB;IACF;EACF,CAAC,CAAC;EAEFR,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,GAAG,CAAC;IACb,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9B,IAAIF,KAAK,GAAGX,IAAI,CAACS,MAAM,EAAE;QACvBE,KAAK,EAAE;QACPT,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACLY,aAAa,CAACF,KAAK,CAAC;QACpBF,UAAU,CAAC,MAAM;UACfR,UAAU,CAAC,KAAK,CAAC;UACjBJ,eAAe,CAAC,CAAC;QACnB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ;IACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACT,OAAO,MAAMgB,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,CAACZ,IAAI,EAAEF,eAAe,CAAC,CAAC;EAE3B,oBAAQJ,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACNrB,OAAA;MAAAqB,QAAA,EAAO;IAEX;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAEJzB,OAAA;MACE0B,KAAK,EAAE;QACLC,UAAU,EAAE,qBAAqB;QAAC;QAClCC,eAAe,EAAE,OAAO;QACxBC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,QAAQ,EAAE,UAAU;QACpBC,UAAU,EAAE;MACd,CAAE;MAAAd,QAAA,eAEFrB,OAAA,CAACF,QAAQ,CAACsC,GAAG;QACXV,KAAK,EAAE;UACL,GAAGjB,SAAS;UACZ4B,QAAQ,EAAE,OAAO;UACjBC,KAAK,EAAE,OAAO,CAAC;QACjB,CAAE;QAAAjB,QAAA,EAEDf;MAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA,eACJ,CAAC;AAEP,CAAC;AAACpB,EAAA,CAhEIF,aAAa;EAAA,QAICN,SAAS;AAAA;AAAA0C,EAAA,GAJvBpC,aAAa;AAkEnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}