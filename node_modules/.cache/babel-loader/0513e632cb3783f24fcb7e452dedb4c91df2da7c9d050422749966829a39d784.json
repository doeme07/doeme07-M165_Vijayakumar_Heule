{"ast":null,"code":"import axios from \"axios\";\n\n// Define the type for the car object\n\nexport async function fetchCars() {\n  const url = 'https://eu-central-1.aws.data.mongodb-api.com/app/car-brmdzib/endpoint/cars';\n  try {\n    const response = await axios.post(url);\n    // Transform the received data into car objects\n    const cars = response.data.map(car => ({\n      id: car._id,\n      brand: car.brand,\n      model: car.model,\n      seats: car.seats,\n      category: car.category,\n      horsepower: car.horsepower,\n      seatsCount: car.seatsCount,\n      fuelType: car.fuelType,\n      price: car.price,\n      link: car.link\n    }));\n    console.log(cars);\n    return cars;\n  } catch (error) {\n    console.error(\"Error fetching cars:\", error);\n    return [];\n  }\n}","map":{"version":3,"names":["axios","fetchCars","url","response","post","cars","data","map","car","id","_id","brand","model","seats","category","horsepower","seatsCount","fuelType","price","link","console","log","error"],"sources":["C:/Source/car-rental/TBZ_Modul_322/src/components/Atoms/Test.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Define the type for the car object\r\nexport interface Car {\r\n  _id: string;\r\n  brand: string;\r\n  model: string;\r\n  seats: number;\r\n  category: string;\r\n  horsepower: number;\r\n  seatsCount: number;\r\n  fuelType: string;\r\n  price: number;\r\n  link: string;\r\n}\r\n\r\nexport async function fetchCars(): Promise<Car[]> {\r\n  const url = 'https://eu-central-1.aws.data.mongodb-api.com/app/car-brmdzib/endpoint/cars';\r\n\r\n  try {\r\n    const response = await axios.post(url);\r\n    // Transform the received data into car objects\r\n    const cars: Car[] = response.data.map((car: any) => ({\r\n      id: car._id,\r\n      brand: car.brand,\r\n      model: car.model,\r\n      seats: car.seats,\r\n      category: car.category,\r\n      horsepower: car.horsepower,\r\n      seatsCount: car.seatsCount,\r\n      fuelType: car.fuelType,\r\n      price: car.price,\r\n      link: car.link\r\n    }));\r\n    console.log(cars)\r\n    return cars;\r\n  } catch (error) {\r\n    console.error(\"Error fetching cars:\", error);\r\n    return [];\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAcA,OAAO,eAAeC,SAASA,CAAA,EAAmB;EAChD,MAAMC,GAAG,GAAG,6EAA6E;EAEzF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAACF,GAAG,CAAC;IACtC;IACA,MAAMG,IAAW,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAEC,GAAQ,KAAM;MACnDC,EAAE,EAAED,GAAG,CAACE,GAAG;MACXC,KAAK,EAAEH,GAAG,CAACG,KAAK;MAChBC,KAAK,EAAEJ,GAAG,CAACI,KAAK;MAChBC,KAAK,EAAEL,GAAG,CAACK,KAAK;MAChBC,QAAQ,EAAEN,GAAG,CAACM,QAAQ;MACtBC,UAAU,EAAEP,GAAG,CAACO,UAAU;MAC1BC,UAAU,EAAER,GAAG,CAACQ,UAAU;MAC1BC,QAAQ,EAAET,GAAG,CAACS,QAAQ;MACtBC,KAAK,EAAEV,GAAG,CAACU,KAAK;MAChBC,IAAI,EAAEX,GAAG,CAACW;IACZ,CAAC,CAAC,CAAC;IACHC,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOiB,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAE;EACX;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}