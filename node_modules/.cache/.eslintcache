[{"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\index.tsx":"1","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\reportWebVitals.ts":"2","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\App.tsx":"3","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\LoginPage.tsx":"4","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\RegisterPage.tsx":"5","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\AboutUsPage.tsx":"6","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\CarDetailsPage.tsx":"7","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\HomePage.tsx":"8","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\CarPage.tsx":"9","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\PaymentPage.tsx":"10","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Molecules\\Navbar.tsx":"11","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Molecules\\Badge.tsx":"12","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Molecules\\AnimatedIntro.tsx":"13","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Atoms\\Carmodel.ts":"14","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Atoms\\CarModel.ts":"15"},{"size":573,"mtime":1699243239912,"results":"16","hashOfConfig":"17"},{"size":440,"mtime":1699243239913,"results":"18","hashOfConfig":"17"},{"size":1703,"mtime":1714950090889,"results":"19","hashOfConfig":"17"},{"size":5614,"mtime":1699847572098,"results":"20","hashOfConfig":"17"},{"size":3580,"mtime":1699831626008,"results":"21","hashOfConfig":"17"},{"size":2597,"mtime":1699841957240,"results":"22","hashOfConfig":"17"},{"size":4898,"mtime":1714950090875,"results":"23","hashOfConfig":"17"},{"size":2177,"mtime":1714950090867,"results":"24","hashOfConfig":"17"},{"size":3369,"mtime":1714950090919,"results":"25","hashOfConfig":"17"},{"size":2488,"mtime":1714950090875,"results":"26","hashOfConfig":"17"},{"size":3192,"mtime":1699847910372,"results":"27","hashOfConfig":"17"},{"size":501,"mtime":1699838641953,"results":"28","hashOfConfig":"17"},{"size":1852,"mtime":1699847629645,"results":"29","hashOfConfig":"17"},{"size":1063,"mtime":1714950093763,"results":"30","hashOfConfig":"17"},{"size":1063,"mtime":1714950093763,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"dv4jr5",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\index.tsx",[],[],["83","84","85","86","87","88"],"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\reportWebVitals.ts",[],[],"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\App.tsx",[],[],"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\LoginPage.tsx",["89","90"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Container, Grid, TextField, Typography } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport backgroundImage from '../../background.jpg';\r\nimport AnimatedIntro from '../Molecules/AnimatedIntro';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport '../../index.css';\r\n\r\ninterface LoginFormValues {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const [introComplete, setIntroComplete] = useState(false);\r\n  const [showContent, setShowContent] = useState(false);\r\n\r\n  const handleIntroComplete = () => {\r\n    setIntroComplete(true);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (values: LoginFormValues, { setSubmitting }: any) => {\r\n    // Simulate basic login (without any validation)\r\n    // In a real application, this should communicate with a backend for authentication\r\n    if (values.username !== '' && values.password !== '') {\r\n      // No validation in this example, direct navigation to '/home'\r\n      navigate('/home');\r\n    } else {\r\n      setError('Please fill in all fields.');\r\n    }\r\n    setSubmitting(false);\r\n  };\r\n\r\n  const fadeAnimation = useSpring({\r\n    opacity: introComplete ? 1 : 0,\r\n    from: { opacity: 0 },\r\n    config: { duration: 3000 }, // Adjust the duration for the fade-in animation\r\n    onRest: () => {\r\n      setShowContent(true); // Show the real content (AppBar) after intro animation\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Black Screen */}\r\n      {!introComplete && <AnimatedIntro onIntroComplete={handleIntroComplete} />}\r\n\r\n      {/* Content */}\r\n      {introComplete && (\r\n        <animated.div\r\n          style={{\r\n            ...fadeAnimation,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            minHeight: '100vh',\r\n            background: `url(${backgroundImage})`, // Change the background color to black\r\n            position: 'absolute', // Ensure the absolute positioning to cover the whole screen\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <Container\r\n            maxWidth=\"xs\"\r\n            style={{\r\n              padding: '35px',\r\n              background: 'white',\r\n              borderRadius: '10px',\r\n            }}\r\n          >\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n              Login\r\n            </Typography>\r\n            <Formik\r\n              initialValues={{ username: '', password: '' }}\r\n              enableReinitialize\r\n              validate={(values: LoginFormValues): any => {\r\n                const errors: { username?: string; password?: string } = {};\r\n\r\n                if (!values.username) {\r\n                  errors.username = 'Required';\r\n                }\r\n\r\n                if (!values.password) {\r\n                  errors.password = 'Required';\r\n                }\r\n\r\n                return errors;\r\n              }}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {({ isSubmitting, isValid, touched }: any) => (\r\n                <Form>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        type=\"username\"\r\n                        name=\"username\"\r\n                        as={TextField}\r\n                        label=\"Username\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        error={touched.username && !isValid && !isSubmitting}\r\n                        helperText={<ErrorMessage name=\"username\" component=\"div\" />}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Field\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        as={TextField}\r\n                        label=\"Password\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        error={touched.password && !isValid && !isSubmitting}\r\n                        helperText={<ErrorMessage name=\"password\" component=\"div\" />}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Button\r\n                        color=\"inherit\"\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        fullWidth\r\n                        style={{\r\n                          textDecoration: 'none',\r\n                          fontSize: '18px',\r\n                          color: 'white',\r\n                          backgroundColor: 'grey',\r\n                        }}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n            {error && (\r\n              <Typography variant=\"body2\" color=\"error\" align=\"center\">\r\n                {error}\r\n              </Typography>\r\n            )}\r\n            <Typography variant=\"body2\" align=\"center\" style={{ marginTop: '10px' }}>\r\n              Don't have an account? <Link to=\"/register\">Register</Link>\r\n            </Typography>\r\n          </Container>\r\n        </animated.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\RegisterPage.tsx",["91"],[],"import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Container, Grid, TextField, Typography } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport backgroundImage from '../../background.jpg';\r\n\r\ninterface RegisterFormValues {\r\n  username: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleRegister = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (username !== '' && password !== '' && password === confirmPassword) {\r\n      // In a real application, you would handle registration logic here\r\n      // For this example, just redirecting to the login page\r\n      navigate('/');\r\n    } else {\r\n      setError('Please fill in all fields and make sure the passwords match.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '100vh',\r\n        background: `url(${backgroundImage})`,\r\n      }}\r\n    >\r\n      <Container\r\n        maxWidth=\"xs\"\r\n        style={{\r\n          padding: '35px',\r\n          background: 'white',\r\n          borderRadius: '10px',\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          Register\r\n        </Typography>\r\n        <form onSubmit={handleRegister}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                type=\"text\"\r\n                label=\"Username\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                type=\"password\"\r\n                label=\"Confirm Password\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                color=\"inherit\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                fullWidth\r\n                style={{\r\n                  textDecoration: 'none',\r\n                  fontSize: '18px',\r\n                  color: 'white',\r\n                  backgroundColor: 'grey',\r\n                }}\r\n              >\r\n                Register\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        {error && (\r\n          <Typography variant=\"body2\" color=\"error\" align=\"center\">\r\n            {error}\r\n          </Typography>\r\n        )}\r\n        <Typography variant=\"body2\" align=\"center\" style={{ marginTop: '10px' }}>\r\n          Already have an account? <Link to=\"/\">Login</Link>\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\AboutUsPage.tsx",[],[],"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\CarDetailsPage.tsx",[],[],"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\HomePage.tsx",["92","93"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Car } from \"../Atoms/CarModel\"\r\nimport backgroundImage from '../../background.jpg';\r\n\r\n\r\ninterface CarPageProps {\r\n  carData: Car[];\r\n}\r\n\r\nconst HomePage: React.FC<CarPageProps> = ({ carData }) => {\r\n  const [index, setIndex] = useState(0);\r\n  const [delay, setDelay] = useState(3000); // Delay between images in milliseconds\r\n\r\n  const nextSlide = () => {\r\n    setIndex((prevIndex) => (prevIndex === carData.length - 1 ? 0 : prevIndex + 1));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(nextSlide, delay);\r\n    return () => clearInterval(interval);\r\n  }, [index]);\r\n\r\n  const fixedImageHeight = '400px'; // Set your desired fixed height for the images\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '100vh',\r\n        background: `url(${backgroundImage})`, // Assuming backgroundImage is defined\r\n        backgroundSize: 'cover',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          // Adjust the alpha value for transparency\r\n          padding: '20px',\r\n          borderRadius: '10px',\r\n          maxWidth: '800px', // Adjust the width based on your design\r\n          width: '100%',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.1)', \r\n        }}\r\n      >\r\n        <div className=\"slideshow\" style={{ position: 'relative' }}>\r\n          {carData.map((car, carIndex) => (\r\n            <div\r\n              key={car.id}\r\n              style={{\r\n                display: carIndex === index ? 'block' : 'none',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <p style={{ color: 'white', fontSize: '24px', fontWeight: 'bold' }}>\r\n                {car.brand} {car.model}\r\n              </p>\r\n              <img\r\n                src={car.link}\r\n                alt={`${car.brand} ${car.model}`}\r\n                style={{ width: '100%', height: fixedImageHeight, borderRadius: '10px' }}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\CarPage.tsx",["94","95","96"],[],"import React, { useState, useEffect, ReactNode } from 'react';\r\nimport { Car } from '../Atoms/CarModel';\r\nimport backgroundImage from '../../background.jpg';\r\nimport Navbar from '../Molecules/Navbar';\r\nimport { Fab, useScrollTrigger, Zoom, Tooltip } from '@mui/material';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// ScrollTop component definition\r\ninterface ScrollTopProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ScrollTop: React.FC<ScrollTopProps> = ({ children }: ScrollTopProps) => {\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 100,\r\n  });\r\n\r\n  const handleClick = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Zoom in={trigger}>\r\n      <div onClick={handleClick} role=\"presentation\" style={{ position: 'fixed', bottom: 16, right: 16 }}>\r\n        {children}\r\n      </div>\r\n    </Zoom>\r\n  );\r\n};\r\n\r\n// CarPage component definition\r\ninterface CarPageProps {\r\n  carData: Car[];\r\n}\r\n\r\nconst CarPage: React.FC<CarPageProps> = ({ carData }) => {\r\n  const fixedImageHeight = '200px'; // Adjusted height for better layout\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          minHeight: '100vh',\r\n          background: `url(${backgroundImage})`,\r\n          backgroundSize: 'cover',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <div\r\n          className=\"car-list\"\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            padding: '20px',\r\n            maxWidth: '1200px', // Adjusted the maximum width for better responsiveness\r\n            width: '100%',\r\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n          }}\r\n        >\r\n          {carData.map((car) => (\r\n            <div key={car.id} style={{ marginBottom: '20px', width: '30%' }}>\r\n              <Link to={`/cars/${car.id}`} style={{ textDecoration: 'none', color: 'white' }}>\r\n                <div\r\n                  key={car.id}\r\n                  style={{\r\n                    textAlign: 'center',\r\n                    marginBottom: '20px',\r\n                  }}\r\n                >\r\n                  <p style={{ color: 'white', fontSize: '18px', fontWeight: 'bold', marginBottom: '8px' }}>\r\n                    {car.brand} {car.model}\r\n                  </p>\r\n                  <img\r\n                    src={car.link}\r\n                    alt={`${car.brand} ${car.model}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: fixedImageHeight,\r\n                      borderRadius: '10px',\r\n                      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <ScrollTop>\r\n        <Tooltip title=\"Back to Top\">\r\n          <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\" style={{ backgroundColor: 'grey' }}>\r\n            <KeyboardArrowUpIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </ScrollTop>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarPage;\r\n","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Pages\\PaymentPage.tsx",[],[],"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Molecules\\Navbar.tsx",["97"],[],"import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { AppBar as MuiAppBar, Toolbar, Button, Box } from '@mui/material';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport DirectionsCarIcon from '@mui/icons-material/DirectionsCar';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport Badge from './Badge';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\n\r\ninterface NavbarProps {\r\n  cartCount: number;\r\n}\r\n\r\nconst Navbar: React.FC<NavbarProps> = ({ cartCount }) => {\r\n  const location = useLocation();\r\n  const hideNavbar = location.pathname === '/' || location.pathname === '/register';\r\n\r\n  if (hideNavbar) {\r\n    return null; // Do not render the Navbar on the Login and Register pages\r\n  }\r\n\r\n  return (\r\n    <MuiAppBar\r\n      position=\"static\"\r\n      style={{\r\n        height: '80px',\r\n        background: 'black',\r\n      }}\r\n    >\r\n <style>\r\n@import url('https://fonts.googleapis.com/css2?family=Lobster&display=swap');\r\n</style>\r\n\r\n      <Toolbar>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          width=\"100%\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Button\r\n            color=\"inherit\"\r\n            component={Link}\r\n            to=\"/home\"\r\n            style={{\r\n              textDecoration: 'none',\r\n              fontSize: '18px',\r\n              color: 'white',\r\n            }}\r\n          >\r\n            <HomeIcon style={{ marginRight: '5px' }} />\r\n            Home\r\n          </Button>\r\n          <Button\r\n            color=\"inherit\"\r\n            component={Link}\r\n            to=\"/cars\"\r\n            style={{\r\n              textDecoration: 'none',\r\n              fontSize: '18px',\r\n              color: 'white',\r\n            }}\r\n          >\r\n            <DirectionsCarIcon style={{ marginRight: '5px' }} />\r\n            Cars\r\n          </Button>\r\n          <Button>\r\n            <Link\r\n              to=\"/home\"\r\n              style={{\r\n                textDecoration: 'none',\r\n                fontFamily: \"Lobster, sans-serif\",\r\n                color: 'white',\r\n                fontSize: '27px',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              Car Rental\r\n            </Link>\r\n          </Button>\r\n          <div>\r\n            <Button\r\n              color=\"inherit\"\r\n              component={Link}\r\n              to=\"/payment\"\r\n              style={{\r\n                textDecoration: 'none',\r\n                fontSize: '18px',\r\n                color: 'white',\r\n              }}\r\n            >\r\n              {/* Use the Badge component to display the cart count */}\r\n              <Badge count={cartCount} />\r\n              Cart\r\n            </Button>\r\n          </div>\r\n          <Button\r\n            color=\"inherit\"\r\n            component={Link}\r\n            to=\"/about\"\r\n            style={{\r\n              textDecoration: 'none',\r\n              fontSize: '18px',\r\n              color: 'white',\r\n            }}\r\n          >\r\n            <InfoIcon style={{ marginRight: '5px' }} />\r\n            About Us\r\n          </Button>\r\n        </Box>\r\n      </Toolbar>\r\n    </MuiAppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Molecules\\Badge.tsx",[],[],"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Molecules\\AnimatedIntro.tsx",[],[],"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Atoms\\Carmodel.ts",[],[],"C:\\Source\\car-rental\\TBZ_Modul_322\\src\\components\\Atoms\\CarModel.ts",[],[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"114","line":18,"column":10,"nodeType":"112","messageId":"113","endLine":18,"endColumn":21},{"ruleId":"110","severity":1,"message":"115","line":7,"column":11,"nodeType":"112","messageId":"113","endLine":7,"endColumn":29},{"ruleId":"110","severity":1,"message":"116","line":12,"column":17,"nodeType":"112","messageId":"113","endLine":12,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":21,"column":6,"nodeType":"119","endLine":21,"endColumn":13,"suggestions":"120"},{"ruleId":"110","severity":1,"message":"121","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"122","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":14},{"ruleId":"110","severity":1,"message":"123","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":24},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["124"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'showContent' is assigned a value but never used.","'RegisterFormValues' is defined but never used.","'setDelay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delay' and 'nextSlide'. Either include them or remove the dependency array.","ArrayExpression",["125"],"'useState' is defined but never used.","'Navbar' is defined but never used.","'ShoppingCartIcon' is defined but never used.","no-object-constructor",{"desc":"126","fix":"127"},"Update the dependencies array to be: [delay, index, nextSlide]",{"range":"128","text":"129"},[632,639],"[delay, index, nextSlide]"]